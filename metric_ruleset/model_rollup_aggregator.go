/*
Metric Ruleset API

Metric ruleset API 

API version: 3.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metric_ruleset

import (
	"encoding/json"
)

// RollupAggregator A rollup aggregator for your aggregation rule 
type RollupAggregator struct {
	// Dimensions you want to keep or drop in the aggregation rule 
	Dimensions []string `json:"dimensions,omitempty"`
	// Flag toggling if the dimensions are being dropped 
	DropDimensions *bool `json:"dropDimensions,omitempty"`
	// New aggregated metric name 
	OutputName string `json:"outputName"`
	// Aggregation rule type 
	Type string `json:"type"`
}

// NewRollupAggregator instantiates a new RollupAggregator object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRollupAggregator(outputName string, type_ string) *RollupAggregator {
	this := RollupAggregator{}
	this.OutputName = outputName
	this.Type = type_
	return &this
}

// NewRollupAggregatorWithDefaults instantiates a new RollupAggregator object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRollupAggregatorWithDefaults() *RollupAggregator {
	this := RollupAggregator{}
	return &this
}

// GetDimensions returns the Dimensions field value if set, zero value otherwise.
func (o *RollupAggregator) GetDimensions() []string {
	if o == nil || isNil(o.Dimensions) {
		var ret []string
		return ret
	}
	return o.Dimensions
}

// GetDimensionsOk returns a tuple with the Dimensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RollupAggregator) GetDimensionsOk() ([]string, bool) {
	if o == nil || isNil(o.Dimensions) {
    return nil, false
	}
	return o.Dimensions, true
}

// HasDimensions returns a boolean if a field has been set.
func (o *RollupAggregator) HasDimensions() bool {
	if o != nil && !isNil(o.Dimensions) {
		return true
	}

	return false
}

// SetDimensions gets a reference to the given []string and assigns it to the Dimensions field.
func (o *RollupAggregator) SetDimensions(v []string) {
	o.Dimensions = v
}

// GetDropDimensions returns the DropDimensions field value if set, zero value otherwise.
func (o *RollupAggregator) GetDropDimensions() bool {
	if o == nil || isNil(o.DropDimensions) {
		var ret bool
		return ret
	}
	return *o.DropDimensions
}

// GetDropDimensionsOk returns a tuple with the DropDimensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RollupAggregator) GetDropDimensionsOk() (*bool, bool) {
	if o == nil || isNil(o.DropDimensions) {
    return nil, false
	}
	return o.DropDimensions, true
}

// HasDropDimensions returns a boolean if a field has been set.
func (o *RollupAggregator) HasDropDimensions() bool {
	if o != nil && !isNil(o.DropDimensions) {
		return true
	}

	return false
}

// SetDropDimensions gets a reference to the given bool and assigns it to the DropDimensions field.
func (o *RollupAggregator) SetDropDimensions(v bool) {
	o.DropDimensions = &v
}

// GetOutputName returns the OutputName field value
func (o *RollupAggregator) GetOutputName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OutputName
}

// GetOutputNameOk returns a tuple with the OutputName field value
// and a boolean to check if the value has been set.
func (o *RollupAggregator) GetOutputNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.OutputName, true
}

// SetOutputName sets field value
func (o *RollupAggregator) SetOutputName(v string) {
	o.OutputName = v
}

// GetType returns the Type field value
func (o *RollupAggregator) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *RollupAggregator) GetTypeOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *RollupAggregator) SetType(v string) {
	o.Type = v
}

func (o RollupAggregator) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Dimensions) {
		toSerialize["dimensions"] = o.Dimensions
	}
	if !isNil(o.DropDimensions) {
		toSerialize["dropDimensions"] = o.DropDimensions
	}
	if true {
		toSerialize["outputName"] = o.OutputName
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableRollupAggregator struct {
	value *RollupAggregator
	isSet bool
}

func (v NullableRollupAggregator) Get() *RollupAggregator {
	return v.value
}

func (v *NullableRollupAggregator) Set(val *RollupAggregator) {
	v.value = val
	v.isSet = true
}

func (v NullableRollupAggregator) IsSet() bool {
	return v.isSet
}

func (v *NullableRollupAggregator) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRollupAggregator(val *RollupAggregator) *NullableRollupAggregator {
	return &NullableRollupAggregator{value: val, isSet: true}
}

func (v NullableRollupAggregator) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRollupAggregator) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


