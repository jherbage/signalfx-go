/*
Metric Ruleset API

Metric ruleset API 

API version: 3.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metric_ruleset

import (
	"encoding/json"
)

// CreateMetricRulesetRequest Create metric ruleset request body 
type CreateMetricRulesetRequest struct {
	// Aggregation rules in the ruleset 
	AggregationRules []AggregationRule `json:"aggregationRules,omitempty"`
	// Name of the metric 
	MetricName string `json:"metricName"`
	RoutingRule RoutingRule `json:"routingRule"`
	// Version of the ruleset 
	Version int64 `json:"version"`
}

// NewCreateMetricRulesetRequest instantiates a new CreateMetricRulesetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateMetricRulesetRequest(metricName string, routingRule RoutingRule, version int64) *CreateMetricRulesetRequest {
	this := CreateMetricRulesetRequest{}
	this.MetricName = metricName
	this.RoutingRule = routingRule
	this.Version = version
	return &this
}

// NewCreateMetricRulesetRequestWithDefaults instantiates a new CreateMetricRulesetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateMetricRulesetRequestWithDefaults() *CreateMetricRulesetRequest {
	this := CreateMetricRulesetRequest{}
	return &this
}

// GetAggregationRules returns the AggregationRules field value if set, zero value otherwise.
func (o *CreateMetricRulesetRequest) GetAggregationRules() []AggregationRule {
	if o == nil || isNil(o.AggregationRules) {
		var ret []AggregationRule
		return ret
	}
	return o.AggregationRules
}

// GetAggregationRulesOk returns a tuple with the AggregationRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMetricRulesetRequest) GetAggregationRulesOk() ([]AggregationRule, bool) {
	if o == nil || isNil(o.AggregationRules) {
    return nil, false
	}
	return o.AggregationRules, true
}

// HasAggregationRules returns a boolean if a field has been set.
func (o *CreateMetricRulesetRequest) HasAggregationRules() bool {
	if o != nil && !isNil(o.AggregationRules) {
		return true
	}

	return false
}

// SetAggregationRules gets a reference to the given []AggregationRule and assigns it to the AggregationRules field.
func (o *CreateMetricRulesetRequest) SetAggregationRules(v []AggregationRule) {
	o.AggregationRules = v
}

// GetMetricName returns the MetricName field value
func (o *CreateMetricRulesetRequest) GetMetricName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetricName
}

// GetMetricNameOk returns a tuple with the MetricName field value
// and a boolean to check if the value has been set.
func (o *CreateMetricRulesetRequest) GetMetricNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.MetricName, true
}

// SetMetricName sets field value
func (o *CreateMetricRulesetRequest) SetMetricName(v string) {
	o.MetricName = v
}

// GetRoutingRule returns the RoutingRule field value
func (o *CreateMetricRulesetRequest) GetRoutingRule() RoutingRule {
	if o == nil {
		var ret RoutingRule
		return ret
	}

	return o.RoutingRule
}

// GetRoutingRuleOk returns a tuple with the RoutingRule field value
// and a boolean to check if the value has been set.
func (o *CreateMetricRulesetRequest) GetRoutingRuleOk() (*RoutingRule, bool) {
	if o == nil {
    return nil, false
	}
	return &o.RoutingRule, true
}

// SetRoutingRule sets field value
func (o *CreateMetricRulesetRequest) SetRoutingRule(v RoutingRule) {
	o.RoutingRule = v
}

// GetVersion returns the Version field value
func (o *CreateMetricRulesetRequest) GetVersion() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *CreateMetricRulesetRequest) GetVersionOk() (*int64, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *CreateMetricRulesetRequest) SetVersion(v int64) {
	o.Version = v
}

func (o CreateMetricRulesetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AggregationRules) {
		toSerialize["aggregationRules"] = o.AggregationRules
	}
	if true {
		toSerialize["metricName"] = o.MetricName
	}
	if true {
		toSerialize["routingRule"] = o.RoutingRule
	}
	if true {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableCreateMetricRulesetRequest struct {
	value *CreateMetricRulesetRequest
	isSet bool
}

func (v NullableCreateMetricRulesetRequest) Get() *CreateMetricRulesetRequest {
	return v.value
}

func (v *NullableCreateMetricRulesetRequest) Set(val *CreateMetricRulesetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateMetricRulesetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateMetricRulesetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateMetricRulesetRequest(val *CreateMetricRulesetRequest) *NullableCreateMetricRulesetRequest {
	return &NullableCreateMetricRulesetRequest{value: val, isSet: true}
}

func (v NullableCreateMetricRulesetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateMetricRulesetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


